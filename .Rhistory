ggplot(data = world, aes(x = long, y = lat)) +
geom_polygon(aes(group = group), fill = 'seashell', color = 'seashell3') + theme_minimal() +
geom_point(data = coverTransect[coverTransect$FiscalYear == "2018"], aes(x = Longitude, y = Latitude, size = Coral), alpha = 0.5, color = 'pink') +
scale_color_gradient2(low = 'blue', mid = 'lightgoldenrodyellow', high = 'red', midpoint = 30) +
theme(panel.background = element_rect(fill = 'skyblue2', color = NA), panel.grid = element_blank())
coverTransect$FiscalYear
ggplot(data = world, aes(x = long, y = lat)) +
geom_polygon(aes(group = group), fill = 'seashell', color = 'seashell3') + theme_minimal() +
geom_point(data = coverTransect[coverTransect$FiscalYear == 2018], aes(x = Longitude, y = Latitude, size = Coral), alpha = 0.5, color = 'pink') +
scale_color_gradient2(low = 'blue', mid = 'lightgoldenrodyellow', high = 'red', midpoint = 30) +
theme(panel.background = element_rect(fill = 'skyblue2', color = NA), panel.grid = element_blank())
ggplot(data = world, aes(x = long, y = lat)) +
geom_polygon(aes(group = group), fill = 'seashell', color = 'seashell3') + theme_minimal() +
geom_point(data = coverTransect[coverTransect$FiscalYear == 2018,], aes(x = Longitude, y = Latitude, size = Coral), alpha = 0.5, color = 'pink') +
scale_color_gradient2(low = 'blue', mid = 'lightgoldenrodyellow', high = 'red', midpoint = 30) +
theme(panel.background = element_rect(fill = 'skyblue2', color = NA), panel.grid = element_blank())
ggplot(data = world, aes(x = long, y = lat)) +
geom_polygon(aes(group = group), fill = 'seashell', color = 'seashell3') + theme_minimal() +
geom_point(data = coverTransect[coverTransect$FiscalYear == 2018,], aes(x = Longitude, y = Latitude, size = Coral), alpha = 0.5, color = 'red') +
scale_color_gradient2(low = 'blue', mid = 'lightgoldenrodyellow', high = 'red', midpoint = 30) +
theme(panel.background = element_rect(fill = 'skyblue2', color = NA), panel.grid = element_blank())
ggplot(data = world, aes(x = long, y = lat)) +
geom_polygon(aes(group = group), fill = 'seashell', color = 'seashell3') + theme_minimal() +
geom_point(data = coverTransect[coverTransect$FiscalYear == 2015,], aes(x = Longitude, y = Latitude, size = Coral), alpha = 0.5, color = 'red') +
scale_color_gradient2(low = 'blue', mid = 'lightgoldenrodyellow', high = 'red', midpoint = 30) +
theme(panel.background = element_rect(fill = 'skyblue2', color = NA), panel.grid = element_blank())
head(healthTransect)
healthTransect <- healthTransect[!(is.na(healthTransect$Longitude)),]
healthTransect <- healthTransect[!(is.na(healthTransect$Longitude)),]
healthTransect[healthTransect$Longitude > 0, "Longitude"] <- -1*healthTransect[healthTransect$Longitude > 0, "Longitude"]
healthTransect <- healthTransect[!(is.na(healthTransect$Longitude)),]
healthTransect <- healthTransect[!(is.na(healthTransect$Longitude)),]
healthTransect[healthTransect$Longitude > 0, "Longitude"] <- -1*healthTransect[healthTransect$Longitude > 0, "Longitude"]
rm(list = ls())
knitr::opts_chunk$set(echo = FALSE)
library(tidyverse)
library(ggplot2)
library(broom)
library(modelr)
#Load Data
lastSup <- read.csv(url("http://www.zoology.ubc.ca/~schluter/WhitlockSchluter/wp-content/data/chapter17/chap17q31LastSupperPortionSize.csv"))
lastSupReg <- lm(portionSize~year, data = lastSup)
anova(lastSupReg)
summary(lastSupReg)
lastSupSum <- tidy(lastSupReg)
lastSup_fit_plot <- ggplot(data=lastSup) +
aes(x=year, y=portionSize) +
geom_point() +
stat_smooth(method="lm")
lastSup_fit_plot
predFrame <- data.frame(year = min(lastSup$year):max(lastSup$year))
predVals <- predict(lastSupReg, newdata=predFrame, interval="prediction")
predFrame <- cbind(predFrame, predVals) %>%
rename(portionSize = fit)
head(predFrame)
lastSup_fit_plot +
stat_smooth(method="lm", color="blue") +
geom_ribbon(data=predFrame, mapping=aes(x=year, ymin=lwr, ymax=upr),
fill="grey", alpha=0.6) +
theme_bw()
# Plot Residuals
plot(lastSupReg, which=1)
# Plot Histogram of Residuals
hist(residuals(lastSupReg))
confint(lastSupReg)
confint(lastSupReg)[2,]
# Plot Data
ggplot(data = deet, aes(x = dose, y = bites)) +
geom_point() +
stat_smooth(method = lm) +
xlab("Dose") +
ylab("Bites")
deet <- read.csv(url("http://www.zoology.ubc.ca/~schluter/WhitlockSchluter/wp-content/data/chapter17/chap17q29DEETMosquiteBites.csv"))
healthTransect <- healthTransect[!(is.na(healthTransect$Longitude)),]
rm(list = ls())
knitr::opts_knit$set(root.dir = '/Users/Kelly/Desktop/mauiBleaching/')
library(readr)
library(tidyr)
library(mapproj)
library(maps)
library(maptools)
library(ggplot2)
coverTransect <- read.csv("PercentCoverByTransect.csv")
coverPicture <- read_csv("PercentCoverByPicture.csv")
healthPhoto <- read_csv("BooleanHealth_ByPhoto.csv")
healthTransect <- read_csv("PercentHealthByTransect.csv")
world <- map_data("world")
world <- world[grep("Hawaii",world$subregion),]
healthTransect <- healthTransect[!(is.na(healthTransect$Longitude)),]
healthTransect[healthTransect$Longitude > 0, "Longitude"] <- -1*healthTransect[healthTransect$Longitude > 0, "Longitude"]
str(healthTransect)
library(knitr)
opts_chunk$set(fig.height=4.5, comment=NA,
warning=FALSE, message=FALSE,
dev="jpeg", echo=FALSE)
library(dplyr)
library(tidyr)
library(broom)
library(ggplot2)
library(rstanarm)
library(brms)
install.packages("brms")
library(knitr)
opts_chunk$set(fig.height=4.5, comment=NA,
warning=FALSE, message=FALSE,
dev="jpeg", echo=FALSE)
library(dplyr)
library(tidyr)
library(broom)
library(ggplot2)
library(rstanarm)
library(brms)
library(tidybayes)
install("tidybayes")
install.packages("tidybayes")
library(knitr)
opts_chunk$set(fig.height=4.5, comment=NA,
warning=FALSE, message=FALSE,
dev="jpeg", echo=FALSE)
library(dplyr)
library(tidyr)
library(broom)
library(ggplot2)
library(rstanarm)
library(brms)
library(tidybayes)
#legacy - fix
library(MCMCglmm)
library(coda)
options(mc.cores = parallel::detectCores())
puffer <- read.csv("./data/11/16q11PufferfishMimicry Caley & Schluter 2003.csv")
theme_set(theme_bw(base_size=17))
set.seed(100)
mod <- stan_glm(x ~ 1, data=data.frame(x=rnorm(50)), verbose=FALSE, family=gaussian())
plot(mod, plotfun="stan_trace")
mcmc_ex <- function(num_weeks = 1e5, current=10, positions = rep(0, num_weeks)){
for ( i in 1:num_weeks ) {
# record current position
positions[i] <- current
# flip coin to generate proposal
proposal <- current + sample( c(-1,1) , size=1 )
# now make sure he loops around the archipelago
if ( proposal < 1 ) proposal <- 10
if ( proposal > 10 ) proposal <- 1
# move?
prob_move <- proposal/current
current <- ifelse( runif(1) < prob_move , proposal , current )
}
positions
}
par(mfrow=c(1,2))
set.seed(2002)
plot(mcmc_ex(10), xlab="weeks", type="l")
rethinking::simplehist(mcmc_ex(10))
install.packages("rethinking")
install.packages(c("coda","mvtnorm","devtools","loo"))
library(devtools)
devtools::install_github("rmcelreath/rethinking")
install.packages(c("coda", "mvtnorm", "devtools", "loo"))
par(mfrow=c(1,2))
set.seed(2002)
plot(mcmc_ex(10), xlab="weeks", type="l")
rethinking::simplehist(mcmc_ex(10))
par(mfrow=c(1,1))
par(mfrow=c(1,2))
set.seed(2002)
plot(mcmc_ex(50), xlab="weeks", type="l")
rethinking::simplehist(mcmc_ex(50))
par(mfrow=c(1,1))
par(mfrow=c(1,2))
set.seed(2002)
plot(mcmc_ex(1000), xlab="weeks", type="l")
rethinking::simplehist(mcmc_ex(1000))
par(mfrow=c(1,1))
plot(mcmc_ex(100), xlab="weeks", type="l")
set.seed(100)
mod <- MCMCglmm(x ~ 1, data=data.frame(x=rnorm(50)), verbose=FALSE)
set.seed(100)
mod <- MCMCglmm(x ~ 1, data=data.frame(x=rnorm(50)), verbose=FALSE)
set.seed(100)
mod <- stan_glm(x ~ 1, data=data.frame(x=rnorm(50)), verbose=FALSE, family=gaussian())
library(knitr)
opts_chunk$set(fig.height=4.5, comment=NA,
warning=FALSE, message=FALSE,
dev="jpeg", echo=FALSE)
library(dplyr)
library(tidyr)
library(broom)
library(ggplot2)
library(rstanarm)
library(brms)
library(tidybayes)
#legacy - fix
library(MCMCglmm)
library(coda)
options(mc.cores = parallel::detectCores())
puffer <- read.csv("./data/11/16q11PufferfishMimicry Caley & Schluter 2003.csv")
theme_set(theme_bw(base_size=17))
puffer_brms <- brm(predators ~ resemblance,
family = gaussian(link = "identity"),
data = puffer)
puffer_brms <- brm(predators ~ resemblance,
family = gaussian(link = "identity"),
data = puffer)
rm(list = ls())
library(knitr)
opts_chunk$set(fig.height=4.5, comment=NA,
warning=FALSE, message=FALSE,
dev="jpeg", echo=FALSE)
library(dplyr)
library(tidyr)
library(broom)
library(ggplot2)
library(rstanarm)
library(brms)
library(tidybayes)
#legacy - fix
library(MCMCglmm)
library(coda)
options(mc.cores = parallel::detectCores())
puffer <- read.csv("./data/11/16q11PufferfishMimicry Caley & Schluter 2003.csv")
theme_set(theme_bw(base_size=17))
puffer_brms <- brm(predators ~ resemblance,
family = gaussian(link = "identity"),
data = puffer)
library(knitr)
opts_chunk$set(fig.height=4.5, comment=NA,
warning=FALSE, message=FALSE,
dev="jpeg", echo=FALSE)
library(dplyr)
library(tidyr)
library(broom)
library(ggplot2)
library(rstanarm)
library(brms)
library(tidybayes)
#legacy - fix
#library(MCMCglmm)
#library(coda)
#options(mc.cores = parallel::detectCores())
puffer <- read.csv("./data/11/16q11PufferfishMimicry Caley & Schluter 2003.csv")
theme_set(theme_bw(base_size=17))
puffer_brms <- brm(predators ~ resemblance,
family = gaussian(link = "identity"),
data = puffer)
rm(list = ls())
library(knitr)
opts_chunk$set(fig.height=4.5, comment=NA,
warning=FALSE, message=FALSE,
dev="jpeg", echo=FALSE)
library(dplyr)
library(tidyr)
library(broom)
library(ggplot2)
#library(rstanarm)
library(brms)
#library(tidybayes)
#legacy - fix
#library(MCMCglmm)
#library(coda)
#options(mc.cores = parallel::detectCores())
puffer <- read.csv("./data/11/16q11PufferfishMimicry Caley & Schluter 2003.csv")
theme_set(theme_bw(base_size=17))
puffer_brms <- brm(predators ~ resemblance,
family = gaussian(link = "identity"),
data = puffer)
?rstan
library(knitr)
opts_chunk$set(fig.height=4.5, comment=NA,
warning=FALSE, message=FALSE,
dev="jpeg", echo=FALSE)
library(dplyr)
library(tidyr)
library(broom)
library(ggplot2)
#library(rstanarm)
library(brms)
#library(tidybayes)
#legacy - fix
#library(MCMCglmm)
#library(coda)
#options(mc.cores = parallel::detectCores())
puffer <- read.csv("./data/11/16q11PufferfishMimicry Caley & Schluter 2003.csv")
theme_set(theme_bw(base_size=17))
puffer_brms <- brm(predators ~ resemblance,
family = gaussian(link = "identity"),
data = puffer)
install.packages("rstan")
install.packages("rstan")
library(knitr)
opts_chunk$set(fig.height=4.5, comment=NA,
warning=FALSE, message=FALSE,
dev="jpeg", echo=FALSE)
library(dplyr)
library(tidyr)
library(broom)
library(ggplot2)
#library(rstanarm)
library(brms)
#library(tidybayes)
#legacy - fix
#library(MCMCglmm)
#library(coda)
#options(mc.cores = parallel::detectCores())
puffer <- read.csv("./data/11/16q11PufferfishMimicry Caley & Schluter 2003.csv")
theme_set(theme_bw(base_size=17))
puffer_brms <- brm(predators ~ resemblance,
family = gaussian(link = "identity"),
data = puffer)
set.seed(100)
mod <- stan_glm(x ~ 1, data=data.frame(x=rnorm(50)), verbose=FALSE, family=gaussian())
library(rstanarm)
#legacy - fix
library(MCMCglmm)
library(coda)
library(tidybayes)
set.seed(100)
mod <- stan_glm(x ~ 1, data=data.frame(x=rnorm(50)), verbose=FALSE, family=gaussian())
plot(mod, plotfun="stan_trace")
bayesplot::available_mcmc()
installed.packages("MCMCglmm")
install.packages("MCMCglmm")
install.packages("MCMCglmm")
#legacy - fix
library(MCMCglmm)
set.seed(100)
mod <- stan_glm(x ~ 1, data=data.frame(x=rnorm(50)), verbose=FALSE, family=gaussian())
library(rstanarm)
set.seed(100)
mod <- stan_glm(x ~ 1, data=data.frame(x=rnorm(50)), verbose=FALSE, family=gaussian())
plot(mod, plotfun="stan_trace")
install.packages("rstan")
install.packages("rstan")
install.packages("rstan")
install.packages("rstan")
install.packages("rstan", repos = "https://cloud.r-project.org/", dependencies=TRUE)
install.packages("rstan", repos = "https://cloud.r-project.org/", dependencies = TRUE)
install.packages("rstan", repos = "https://cloud.r-project.org/", dependencies = TRUE)
library(knitr)
opts_chunk$set(fig.height=4.5, comment=NA,
warning=FALSE, message=FALSE,
dev="jpeg", echo=FALSE)
library(dplyr)
library(tidyr)
library(broom)
library(ggplot2)
library(rstanarm)
library(brms)
library(tidybayes)
#legacy - fix
library(MCMCglmm)
library(coda)
#options(mc.cores = parallel::detectCores())
puffer <- read.csv("./data/11/16q11PufferfishMimicry Caley & Schluter 2003.csv")
theme_set(theme_bw(base_size=17))
plot(mod, plotfun="stan_trace")
?rstanarm-plots
?rstanarm
library(knitr)
opts_chunk$set(fig.height=4.5, comment=NA,
warning=FALSE, message=FALSE,
dev="jpeg", echo=FALSE)
library(dplyr)
library(tidyr)
library(broom)
library(ggplot2)
library(rstanarm)
library(brms)
library(tidybayes)
#legacy - fix
library(MCMCglmm)
library(coda)
#options(mc.cores = parallel::detectCores())
puffer <- read.csv("./data/11/16q11PufferfishMimicry Caley & Schluter 2003.csv")
theme_set(theme_bw(base_size=17))
set.seed(100)
mod <- stan_glm(x ~ 1, data=data.frame(x=rnorm(50)), verbose=FALSE, family=gaussian())
plot(mod, plotfun="stan_trace")
library(rstanarm)
plot(mod, plotfun="stan_trace")
detach("package:MCMCglmm", unload=TRUE)
plot(mod, plotfun="stan_trace")
?bayesplot
library(knitr)
opts_chunk$set(fig.height=4.5, comment=NA,
warning=FALSE, message=FALSE,
dev="jpeg", echo=FALSE)
library(dplyr)
library(tidyr)
library(broom)
library(ggplot2)
library(rstanarm)
library(brms)
library(tidybayes)
library(bayesplot)
#legacy - fix
library(MCMCglmm)
library(coda)
#options(mc.cores = parallel::detectCores())
puffer <- read.csv("./data/11/16q11PufferfishMimicry Caley & Schluter 2003.csv")
theme_set(theme_bw(base_size=17))
plot(mod, plotfun="stan_trace")
bayesplot::available_mcmc()
knitr::kable(tidy(puffer_brms,intervals = TRUE), "html", digits=2) %>%
kableExtra::kable_styling("striped")
knitr::kable(tidy(lm(predators ~ resemblance, data=puffer)), "html", digits=2) %>%
kableExtra::kable_styling("striped")
summary(puffer_brms)
posterior_interval(puffer_brms, prob=0.8)
post_puffer <- as.data.frame(puffer_brms)
puff_pred <- puffer %>%
modelr::data_grid(resemblance)%>%
add_predicted_draws(puffer_brms)
ggplot(puff_pred, aes(x = resemblance, y = predators)) +
stat_lineribbon(aes(y = .prediction)) +
scale_fill_brewer(palette = "Greys") +
scale_color_brewer(palette = "Set2") +
theme_bw(base_size=17)
rhat(puffer_brms_prior)
plot(puffer_brms_prior)
puffer_brms_prior <- brm(predators ~ resemblance,
family = gaussian(link = "identity"),
data = puffer,
prior = c(prior(normal(3, 1), class = Intercept),
prior(normal(1, 0.5), class = b),
prior(uniform(0, 10), class = sigma)))
plot(puffer_brms_prior)
rhat(puffer_brms_prior)
pp_check(puffer_brms_prior) + ggtitle("Posterior Simulations v. Data Distribution")
posterior_interval(puffer_brms)
posterior_interval(puffer_brms_prior)
puff_fit_prior <- puffer %>%
modelr::data_grid(resemblance)%>%
add_fitted_draws(puffer_brms_prior)
ggplot(puff_fit, aes(x = resemblance, y = predators)) +
stat_lineribbon(aes(y = .value)) +
scale_fill_brewer(palette = "Greys") +
scale_color_brewer(palette = "Set2") +
stat_lineribbon(data = puff_fit_prior, color = "blue",
mapping =aes(y = .value)) +
geom_point(data= puffer) +
theme_bw(base_size=17)
puff_fit <- puffer %>%
modelr::data_grid(resemblance)%>%
add_fitted_draws(puffer_brms)
ggplot(puff_fit, aes(x = resemblance, y = predators)) +
stat_lineribbon(aes(y = .value)) +
scale_fill_brewer(palette = "Greys") +
scale_color_brewer(palette = "Set2") +
theme_bw(base_size=17)
puff_fit_prior <- puffer %>%
modelr::data_grid(resemblance)%>%
add_fitted_draws(puffer_brms_prior)
ggplot(puff_fit, aes(x = resemblance, y = predators)) +
stat_lineribbon(aes(y = .value)) +
scale_fill_brewer(palette = "Greys") +
scale_color_brewer(palette = "Set2") +
stat_lineribbon(data = puff_fit_prior, color = "blue",
mapping =aes(y = .value)) +
geom_point(data= puffer) +
theme_bw(base_size=17)
summary(puffer_brms)
pp_check(puffer_brms, type = "error_hist", nsamples = 3, binwidth = 3) +
ggtitle("Residual Histogram for three simulated datasets")
pp_check(puffer_brms, type = "scatter", nsamples=3)
pp_check(puffer_brms)
pp_check(puffer_brms, type = "stat", stat = c("mean"), binwidth=0.5)
pp_check(puffer_brms, type = "stat", stat = c("mean"), binwidth=0.5)
library(rstan)
funnel <- stan_demo("funnel", seed = 12345)   # has 5 divergent transitions
funnel <- stan_demo("funnel", seed = 12345)   # has 5 divergent transitions
?rmnorm
?rmnorm
knitr::opts_chunk$set(echo = FALSE)
library(tidyverse)
library(ggplot2)
library(broom)
library(modelr)
# Load mnormt package
library(mnormt)
?rmnorm
?vcov
deet <- read.csv(url("http://www.zoology.ubc.ca/~schluter/WhitlockSchluter/wp-content/data/chapter17/chap17q29DEETMosquiteBites.csv"))
# Plot Data
ggplot(data = deet, aes(x = dose, y = bites)) +
geom_point() +
stat_smooth(method = lm) +
xlab("Dose") +
ylab("Bites")
# Linear Regression for Bites to Deet Dosage
deetReg <- lm(bites ~ dose, data = deet)
# Variance
vcov(deetReg)
# Load mnormt package
library(mnormt)
# Draw a multivariate normal distribution
rmnorm(4, mean = coef(deetReg), varcov = vcov(deetReg))
coefSims <- rmnorm(500, mean = coef(deetReg), varcov = vcov(deetReg)) %>%
as.data.frame
ggplot(deet, aes(dose, bites)) +
geom_point() +
geom_abline(data = coefSims, aes(slope = dose, intercept = `(Intercept)`), alpha = 0.5) +
stat_smooth(data = deet, method=lm, fill = "blue")
coefSims <- coefSims %>%
mutate(error = rnorm(n(), 0, sd(deetReg$residuals)))
pred_frame <- predict(deetReg, interval="prediction") %>% cbind(deet)
ggplot(deet, aes(dose, bites)) +
geom_point() +
geom_abline(data = coefSims, aes(slope = dose, intercept = error+`(Intercept)`), alpha = 0.5, color = "orange") +
geom_ribbon(data = pred_frame, aes(ymin = lwr, ymax = upr), fill = "purple", alpha = 0.5) +
geom_abline(data = coefSims, aes(slope = dose, intercept = `(Intercept)`), alpha = 0.5) +
stat_smooth(data = deet, method=lm, fill = "blue")
